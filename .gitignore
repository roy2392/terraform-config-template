# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.backup
.terraform/

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore .env file containing sensitive information
.env

# Ignore any log files
*.log

# Ignore any backup files
*.bak

# Ignore .DS_Store files on macOS
.DS_Store

# Ignore any IDE or editor-specific files
.vscode/
.idea/
*.swp
*.swo

# Ignore any temporary files
*~

# Ignore any compiled Python files
*.pyc

# Ignore any compiled Java files
*.class

# Ignore any npm debug logs
npm-debug.log*

# Ignore any yarn debug logs
yarn-debug.log*
yarn-error.log*

# Ignore any local history files
.history/

# Ignore any sensitive or environment-specific files
secrets.yml
config.yml